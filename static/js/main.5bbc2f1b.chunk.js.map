{"version":3,"sources":["CharacterCard.js","Wrapper.js","Navbar.js","Jumbotron.js","App.js","index.js"],"names":["CharacterCard","props","className","Clicked","onClick","handleClick","id","alt","name","src","image","Wrapper","children","Navbar","currentScore","highScore","Jumbotron","App","useState","characters","setCharacters","setHighScore","setCurrentScore","clicked","setClicked","useEffect","fetch","then","response","json","data","console","log","shuffleArray","handleScore","forEach","element","handleIncrement","shuffledArr","shuffle","array","randomIndex","temporaryValue","currentIndex","length","Math","floor","random","map","character","occupation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAmBeA,MAjBf,SAAuBC,GACnB,OACI,sBAAKC,UAAW,SAAWD,EAAME,QAAU,UAAY,IAAKC,QAAS,kBAAMH,EAAMI,YAAaJ,EAAMK,KAApG,UACI,qBAAKJ,UAAU,gBAAf,SACI,qBAAKK,IAAKN,EAAMO,KAAMC,IAAKR,EAAMS,UAErC,qBAAKR,UAAU,cAAf,SACI,6BACI,+BACI,2CAAuBD,EAAMO,gBCLtCG,MAJf,SAAiBV,GACb,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMW,YCc5BC,MAff,SAAgBZ,GACZ,OACI,wBAAQC,UAAU,4BAAlB,SACI,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,WAAd,yBACA,sBAAKA,UAAU,WAAf,UACI,wCAAU,+BAAOD,EAAMa,kBACvB,4CAAc,+BAAOb,EAAMc,YAA3B,OACCd,EAAMW,kBCEZI,MAVf,SAAmBf,GACjB,OACE,qBAAKC,UAAU,4BAAf,SACE,sBAAKA,UAAU,YAAf,UAA4BD,EAAMW,SAChC,mBAAGV,UAAU,OAAb,6FCiGOe,G,MA/FH,WAEV,MAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAU,GAA5C,mBAAOH,EAAP,KAAkBM,EAAlB,KACA,EAAwCH,mBAAU,GAAlD,mBAAOJ,EAAP,KAAqBQ,EAArB,KACA,EAA8BJ,oBAAU,GAAxC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WAERC,MAAO,mBACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJV,EAAcU,QAEjB,IAEHC,QAAQC,IAAI,OAAQb,GAEpB,IAAMd,EAAc,SAACC,GACnB2B,IACAC,EAAY5B,IAIR4B,EAAc,SAAC5B,GACnBa,EAAWgB,SAAQ,SAAAC,GACb9B,IAAO8B,EAAQ9B,KAA0B,IAApB8B,EAAQb,SAC/Ba,EAAQb,SAAU,EAClBC,GAAW,GACXa,IACAN,QAAQC,IAAIb,IAEHb,IAAO8B,EAAQ9B,KAA0B,IAApB8B,EAAQb,UAChCT,EAAeC,GACjBM,EAAaP,GAGjBQ,EAAgB,GAChBE,GAAW,GACXL,EAAWgB,SAAQ,SAAAC,GAAO,OAAKA,EAAQb,SAAU,KACjDQ,QAAQC,IAAIb,QAMZc,EAAe,WAEnB,IAAMK,EAAcC,EAAQpB,GAE5BC,EAAckB,IAKVD,EAAkB,WAEtBf,EAAgBR,EAAe,IAI5ByB,EAAU,SAAAC,GAGb,IAFA,IAAiCC,EAAaC,EAA1CC,EAAeH,EAAMI,SAEhBD,EAAe,GAEtBD,EAAiBF,EADjBC,EAAcI,KAAKC,MAAMD,KAAKE,UAAYJ,EAAe,KAEzDH,EAAMC,GAAeD,EAAMG,GAC3BH,EAAMG,GAAgBD,EAExB,OAAOF,GAGP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACE1B,aAAcA,EACdC,UAAWA,IAEb,cAAC,EAAD,IACCI,EAAW6B,KAAI,SAAAC,GAAS,OACvB,cAAC,EAAD,CACE9C,QAASoB,EACTlB,YAAaA,EACbC,GAAI2C,EAAU3C,GAEdE,KAAMyC,EAAUzC,KAChBE,MAAOuC,EAAUvC,MACjBwC,WAAYD,EAAUC,YAHjBD,EAAU3C,YCzF3B6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5bbc2f1b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction CharacterCard(props) {\r\n    return (\r\n        <div className={\"card \" + (props.Clicked ? \"animate\" : \"\")} onClick={() => props.handleClick( props.id)} >  \r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image} />\r\n            </div>\r\n            <div className=\"img-content\">\r\n                <ul>\r\n                    <li>\r\n                        <strong>Name:</strong>{props.name}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CharacterCard;","import React from \"react\";\r\n\r\nfunction Wrapper(props){\r\n    return <div className=\"wrapper\">{props.children}</div>\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <header className=\"container-fluid fixed-top\" >\r\n            <div className=\"row\">\r\n                <h1 className=\"col-sm-8\">Memory Game</h1>\r\n                <nav className=\"col-sm-4\">\r\n                    <p>Score: <span>{props.currentScore}</span></p>\r\n                    <p>Top Score: <span>{props.highScore}</span> </p>\r\n                    {props.children}\r\n                </nav>\r\n            </div>\r\n        </header>        \r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Jumbotron(props) {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">{props.children}\r\n        <p className=\"lead\">Get points by clicking on an image but don't click on any more than once!</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;","import React, { useState, useEffect} from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nimport Wrapper from \"./Wrapper\";\nimport Navbar from \"./Navbar\";\nimport Jumbotron from \"./Jumbotron\";\nimport \"./App.css\";\n\n\nconst App = () => {\n \n  const [characters, setCharacters] = useState ([]);\n  const [highScore, setHighScore] = useState (0)\n  const [currentScore, setCurrentScore] = useState (0)\n  const [clicked, setClicked] = useState (false)\n\n  useEffect(() => {\n    \n    fetch ('characters.json')\n      .then(response => response.json())\n      .then(data => {\n        setCharacters(data)\n      })\n  }, [])\n\n  console.log(\"data\", characters)\n\n  const handleClick = (id) => { // manejador del click.\n    shuffleArray(); //\n    handleScore(id);\n   /*  console.log(this.state.timesClicked); */\n  };\n  \n  const handleScore = (id) => {\n    characters.forEach(element => {\n      if (id === element.id && element.clicked === false) {\n        element.clicked = true;\n        setClicked(false)\n        handleIncrement();\n        console.log(characters); // solo para checquear que se ponga en en true.\n        \n      } else if (id === element.id && element.clicked === true) {\n          if (currentScore > highScore) {\n            setHighScore(currentScore)\n        }\n\n        setCurrentScore(0)\n        setClicked(true)\n        characters.forEach(element => (element.clicked = false));\n        console.log(characters); // para chequear que todo esten reseteados a false.\n\n      }\n    });\n  };\n\n  const shuffleArray = () => {\n    // Shuffle array of objects\n    const shuffledArr = shuffle(characters);\n    // Setting 'shuffledArr' as the new state\n    setCharacters(shuffledArr)\n  };\n\n\n  // handleIncrement increments this.state.currentScore by 1\n  const handleIncrement = () => {\n    // Using setState method to update component's state\n    setCurrentScore(currentScore + 1)\n  };\n\n  // Function that takes an array as a parameter and shuffles it\n const shuffle = array => {\n    var currentIndex = array.length, randomIndex, temporaryValue;\n\n    while(-- currentIndex > 0) {\n      randomIndex = Math.floor(Math.random() * (currentIndex + 1));\n      temporaryValue = array[randomIndex]\n      array[randomIndex] = array[currentIndex];\n      array[currentIndex] = temporaryValue\n    }\n    return array;\n  };\n \n    return (\n      <Wrapper>\n        <Navbar\n          currentScore={currentScore}\n          highScore={highScore}\n        />\n        <Jumbotron />\n        {characters.map(character => (\n          <CharacterCard\n            Clicked={clicked}\n            handleClick={handleClick}\n            id={character.id}\n            key={character.id}\n            name={character.name}\n            image={character.image}\n            occupation={character.occupation}\n          />\n        ))}\n      </Wrapper>\n    );\n}\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}